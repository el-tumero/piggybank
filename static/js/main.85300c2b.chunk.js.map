{"version":3,"sources":["piggybank.png","Main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","handleSelect","e","setState","time","state","input","renderTooltip","Tooltip","id","Time","dateIsSet","date","OverlayTrigger","placement","delay","show","hide","overlay","Alert","className","src","logo","alt","this","version","Web3","utils","fromWei","piggybankBalance","pigBalance","Container","Row","Col","InputGroup","FormControl","placeholder","ethBalanceReduced","onChange","event","etherAmount","target","value","Text","DropdownButton","variant","title","onSelect","Dropdown","Item","eventKey","Button","onClick","saveFunds","withdrawFunds","withdrawTokens","Component","App","loading","piggybank","methods","payment","send","toWei","from","account","on","hash","window","location","reload","catch","err","console","log","message","substring","alert","a","withdraw","ethSwap","ethBalance","dateString","noWallet","loadWeb3","loadBlockchainData","etherum","web3","enable","currentProvider","amount","eth","requestAccounts","accounts","getBalance","bnbBalance","fromJager","bnbBalanceInBnb","net","getId","networkId","tokenData","Token","networks","token","Contract","abi","address","balanceOf","call","balance","piggybankData","Piggybank","showData","piggybankAccount","Date","Number","toString","Spinner","animation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","packageJson","document","getElementById"],"mappings":"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","file":"static/js/main.85300c2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/piggybank.3632a2f2.png\";","import logo from './piggybank.png';\nimport './App.css';\nimport { Component } from 'react';\nimport Web3 from 'web3'\nimport Countdown from 'react-countdown';\nimport {InputGroup, Button, FormControl, Container, Row, Col, Dropdown, DropdownButton, Tooltip, OverlayTrigger, Alert} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Main extends Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            input: '',\n            time: '60'\n        }\n    }\n\n    handleSelect = (e) => {\n        this.setState({time: e})\n    }\n    render(){\n\n    const renderTooltip = (props) => (\n        <Tooltip id=\"button-tooltip\" {...props}>\n          Time left to unlock the withdrawal.\n        </Tooltip>\n      );\n\n    function Time(props){\n        const dateIsSet = props.date;\n        if(dateIsSet){\n            return(\n                <div>\n                  <OverlayTrigger\n                    placement=\"right\"\n                    delay={{ show: 250, hide: 400 }}\n                    overlay={renderTooltip}\n                  >\n                      {/*  */}\n                      <Alert>\n                      <Countdown date={props.date} />\n                      </Alert>\n                  </OverlayTrigger>\n                </div>\n            )\n        }\n        if(!dateIsSet){\n            return(<div><Alert></Alert></div>)\n        }\n    }\n    \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1>Blockchain Piggybank</h1>\n          <h5><small className=\"text-muted\">{this.props.version} (alpha, bscTestnet)</small></h5>\n          <h3 className=\"divider\">Your savings: {Web3.utils.fromWei(this.props.piggybankBalance, 'ether')} BNB</h3>\n          <small>Tokens balance: {Web3.utils.fromWei(this.props.pigBalance, 'ether')} PIG</small>\n          <Time date={this.props.date} />\n          <h3>Deposit & Withdraw</h3>\n          <Container>\n            <Row>\n            <Col></Col>\n            <Col>\n            <InputGroup>\n            <FormControl\n              placeholder={this.props.ethBalanceReduced}\n              aria-label=\"Input value\"\n              onChange={(event) => {\n                const etherAmount = event.target.value;\n                this.setState({input: etherAmount})\n              }}\n            />\n            <InputGroup.Text>BNB</InputGroup.Text>\n            <DropdownButton\n            variant=\"secondary\"\n            title=\"Time\"\n            id=\"input-group-dropdown-1\"\n            onSelect={this.handleSelect}\n            >\n            <Dropdown.Item eventKey=\"60\">1 minute</Dropdown.Item>\n            <Dropdown.Item eventKey=\"300\">5 minutes</Dropdown.Item>\n            <Dropdown.Item eventKey=\"3600\">1 hour</Dropdown.Item>\n            <Dropdown.Item eventKey=\"86400\">1 day</Dropdown.Item>\n            </DropdownButton>\n            <Button variant=\"success\" onClick={(event) => this.props.saveFunds(this.state.input, this.state.time)}>\n              Save\n            </Button>\n            <Button variant=\"danger\" onClick={(event) => this.props.withdrawFunds()}>\n              Withdraw\n            </Button>\n            </InputGroup>\n            </Col>\n            <Col></Col>\n            </Row>\n            <Row>\n              <Col></Col>\n              <Col>\n              <Button variant=\"warning\" onClick={(event) => this.props.withdrawTokens()}>\n              Tokens!\n            </Button>\n              </Col>\n              <Col></Col>\n            </Row>\n            </Container>\n\n            \n        </header>\n      </div>\n    );\n  }\n}\n\n\n\nexport default Main;\n","import { Component } from 'react';\nimport Piggybank from './abis/Piggybank.json'\nimport Token from './abis/Token.json'\nimport Web3 from 'web3'\nimport Main from './Main'\nimport {Spinner} from 'react-bootstrap'\nimport './App.css';\n\nclass App extends Component{\n\n  async componentDidMount() {\n    await this.loadWeb3()\n    if(!this.state.noWallet){\n      await this.loadBlockchainData()\n      this.setState({loading: false})\n    }\n  }\n\n  async loadWeb3() {\n    if(window.etherum) {\n      window.web3 = new Web3(window.etherum)\n      await window.etherum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-blockchain browser detected. Try Metamask!')\n      this.setState({noWallet: true});\n    }\n  }\n\n  fromJager(amount) {\n    return amount / 1000000000000000000;\n  }\n\n  toJager(amount) {\n    return amount * 1000000000000000000; \n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n\n    const accounts = await web3.eth.requestAccounts()\n    \n    this.setState({ account: accounts[0]})\n\n    //console.log(accounts[0])\n\n    //const ethBalance = await web3.eth.getBalance(this.state.account)\n\n    const bnbBalance = await web3.eth.getBalance(this.state.account)\n\n    const bnbBalanceInBnb = await this.fromJager(bnbBalance)\n\n    //const bnbBalanceReduced = bnbBalanceInBnb.substring(0, bnbBalanceInBnb.length - 10)\n\n    //const ethBalanceInEth = await Web3.utils.fromWei(ethBalance)\n\n    //const ethBalanceReduced = ethBalanceInEth.substring(0, ethBalanceInEth.length - 10)\n\n    //console.log(ethBalance/1000000000000000000);\n\n    this.setState({ ethBalance: bnbBalance })\n    this.setState({ ethBalanceReduced: bnbBalanceInBnb })\n\n    const networkId = await web3.eth.net.getId()\n\n    // Load token contract\n    const tokenData = Token.networks[networkId]\n    if(tokenData){\n      const token = new web3.eth.Contract(Token.abi, tokenData.address)\n      this.setState({token})\n\n      let balance = await token.methods.balanceOf(this.state.account).call()\n      //console.log(balance)\n      this.setState({pigBalance: balance})\n    }\n    else {\n      window.alert('Token contract not deployed to detected network. Use BinanceSmartchainTestnet instead!')\n    }\n\n    //Load piggybank contract\n    \n    const piggybankData = Piggybank.networks[networkId]\n    if(piggybankData) {\n      const piggybank = new web3.eth.Contract(Piggybank.abi, piggybankData.address)\n      this.setState({ piggybank })\n      let piggybankAccount = await piggybank.methods.showData().call({from: this.state.account});\n            \n\n      this.setState({ piggybankBalance: piggybankAccount[0] })\n  \n\n      if(piggybankAccount[1] !== '0'){\n        var date = new Date(Number(piggybankAccount[1]) * 1000)\n        this.setState({date: piggybankAccount[1] * 1000})\n        this.setState({ dateString: date.toString() })\n      }     \n    }\n    else {\n      window.alert('Token contract not deployed to detected network. Use BinanceSmartchainTestnet instead!')\n    }\n\n  }\n\n  saveFunds = (input, time) => {\n    this.setState.loading = true;\n    this.state.piggybank.methods.payment(time).send({value: Web3.utils.toWei(input, 'ether'), from: this.state.account})\n    .on('receipt', function(hash){\n      window.location.reload();\n    })\n    .catch((err) => {\n      console.log(err.message.substring(141))\n      alert('Transaction error, tap F12 for details!')\n    })\n  }\n\n  withdrawFunds = async() => {\n    this.setState.loading = true;\n      this.state.piggybank.methods.withdraw().send({from: this.state.account})\n      .on('receipt', function(hash){\n        window.location.reload();\n      })\n      .catch((err) => {\n        console.log(err.message.substring(141))\n        alert('Transaction error, tap F12 for details!')\n      })\n  }\n\n  withdrawTokens = () => {\n    this.setState.loading = true;\n    this.state.piggybank.methods.withdrawTokens().send({from: this.state.account})\n    .on('receipt', function(hash){\n      window.location.reload();\n    })\n    .catch((err) => {\n      console.log(err.message.substring(141))\n      alert('Transaction error, tap F12 for details!')\n    })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { \n      account: '', \n      piggybank: {},\n      ethSwap: {}, \n      ethBalance: '0',\n      ethBalanceReduced: '0',\n      piggybankBalance: '0',\n      pigBalance: '',\n      dateString: '',\n      date: '',\n      input: '0',\n      loading: true,\n      noWallet: false\n      }\n  }\n\n  render(){\n      if(this.state.loading) return(\n        <div><Spinner className=\"spinner\" animation=\"border\" /></div>\n      )\n      else return(\n      <Main\n      version={this.props.version} \n      ethBalance={this.state.ethBalance}\n      ethBalanceReduced={this.state.ethBalanceReduced}\n      saveFunds={this.saveFunds}\n      withdrawFunds={this.withdrawFunds}\n      withdrawTokens={this.withdrawTokens}\n      dateString={this.state.dateString}\n      date={this.state.date}\n      piggybankBalance={this.state.piggybankBalance}\n      pigBalance={this.state.pigBalance}\n      ></Main>\n      )\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport packageJson from '../package.json';\n//console.log(packageJson.version);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App version={packageJson.version}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}